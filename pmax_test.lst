mads 2.1.6 build 31 (26 Dec 22)
    84 					opt l+
   114
   115 				.print 'ZPAGE: ',zpage,'..',zpend-1
   115 				ZPAGE: $0080..$00D3
   116
   117 				.print 'RTLIB: ',RTLIB,'..',*-1
   117 				RTLIB: $205C..$2200
   118
   119 				; ------------------------------------------------------------
   120
   121 2201			START
   122 2201 BA				tsx
   123 2202 8E CF 24			stx MAIN.@halt+1
   124
   125 					.ifdef fmulinit
   126 					fmulinit
   127 					.fi
   128
   129 = 0313			VLEN	= VARDATASIZE-VARINITSIZE
   130 = 24EA			VADR	= DATAORIGIN+VARINITSIZE
   131
   132 					ift VADR > $BFFF
   133 					ert 'Invalid memory address range ',VADR
   134 					eli (VLEN>0) && (VLEN<=256)
   135 					ldx #256-VLEN
   136 					lda #$00
   137 					sta:rne VADR+VLEN-256,x+
   138 					eli VLEN>256
   139 					@fill #VADR #VLEN #$00
   139 				 MWA #VADR @FILL.PTR1\ MWA #VLEN @FILL.PTR3\ MVA #$00 @FILL.PTR2\ JSR @FILL
   139 2205 A9 EA 85 88 A9 24 +  MWA #VADR @FILL.PTR1
   139 220D A9 13 85 8C A9 03 +  MWA #VLEN @FILL.PTR3
   139 2215 A9 00 85 84		 MVA #$00 @FILL.PTR2
   139 2219 20 DC 20		 JSR @FILL
   140 					eif
   141
   142 				.ifdef :psptr
   143 					mwa #PROGRAMSTACK :psptr
   144 				.fi
   145
   146 					.ifdef MAIN.@DEFINES.ROMOFF
   147 					icl 'atari\romoff.asm'
   148 					.fi
   149
   150 221C A2 0F			ldx #$0F					; DOS II+/D ParamStr
   151 221E BD 40 03 9D D4 24 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   152
   153 2227 E8				inx						; X = 0
   154 2228 86 80			stx bp						; BP = 0
   155
   156 222A 8E 0F D2			stx skctl					; reset POKEY
   157 222D A9 03			lda #3
   158 222F 8D 0F D2			sta skctl
   159
   160 2232 CA				dex						; X = 255
   161
   162 2233				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: pmax_test.a65]
Source: pmax_test.a65
   163
   164 2233			.local	MAIN						; PROCEDURE
   165
   166 2233 4C EC 23			jmp l_0063
   167
   168 				; ------------------------------------------------------------
   169
   170 2236			.local	SYSTEM						; UNIT
   171
   172 				; ------------------------------------------------------------
   173
   174 = 0101			__PORTB_BANKS	= $0101
   175 = 0648			M_PI_2	= $0648
   176 = 0192			D_PI_2	= $0192
   177 = 0004			D_PI_180	= $04
   178 = 0000			MGTIA	= $00
   179 = 0080			MVBXE	= $80
   180 = 0000			VBXE_XDLADR	= $00
   181 = 00E0			VBXE_BCBTMP	= $E0
   182 = 0100			VBXE_BCBADR	= $0100
   183 = 1000			VBXE_MAPADR	= $1000
   184 = 1000			VBXE_CHBASE	= $1000
   185 = 5000			VBXE_OVRADR	= $5000
   186 = B000			VBXE_WINDOW	= $B000
   187 = 0000			IDLI	= $00
   188 = 0001			IVBL	= $01
   189 = 0001			IVBLD	= $01
   190 = 0002			IVBLI	= $02
   191 = 0003			ITIM1	= $03
   192 = 0004			ITIM2	= $04
   193 = 0005			ITIM4	= $05
   194 = 00FE			CH_DELCHR	= $FE
   195 = 009B			CH_ENTER	= $9B
   196 = 001B			CH_ESC	= $1B
   197 = 001C			CH_CURS_UP	= $1C
   198 = 001D			CH_CURS_DOWN	= $1D
   199 = 001E			CH_CURS_LEFT	= $1E
   200 = 001F			CH_CURS_RIGHT	= $1F
   201 = 007F			CH_TAB	= $7F
   202 = 009B			CH_EOL	= $9B
   203 = 007D			CH_CLR	= $7D
   204 = 00FD			CH_BELL	= $FD
   205 = 007E			CH_DEL	= $7E
   206 = 009C			CH_DELLINE	= $9C
   207 = 009D			CH_INSLINE	= $9D
   208 = 0000			PAL_PMCOLOR0	= $00
   209 = 0001			PAL_PMCOLOR1	= $01
   210 = 0002			PAL_PMCOLOR2	= $02
   211 = 0003			PAL_PMCOLOR3	= $03
   212 = 0004			PAL_COLOR0	= $04
   213 = 0005			PAL_COLOR1	= $05
   214 = 0006			PAL_COLOR2	= $06
   215 = 0007			PAL_COLOR3	= $07
   216 = 0008			PAL_COLBAK	= $08
   217 = 0000			COLOR_BLACK	= $00
   218 = 000E			COLOR_WHITE	= $0E
   219 = 0032			COLOR_RED	= $32
   220 = 0096			COLOR_CYAN	= $96
   221 = 0068			COLOR_VIOLET	= $68
   222 = 00C4			COLOR_GREEN	= $C4
   223 = 0074			COLOR_BLUE	= $74
   224 = 00EE			COLOR_YELLOW	= $EE
   225 = 0028			COLOR_ORANGE	= $28
   226 = 00E4			COLOR_BROWN	= $E4
   227 = 003C			COLOR_LIGHTRED	= $3C
   228 = 0004			COLOR_GRAY1	= $04
   229 = 0006			COLOR_GRAY2	= $06
   230 = 000A			COLOR_GRAY3	= $0A
   231 = 00CC			COLOR_LIGHTGREEN	= $CC
   232 = 007C			COLOR_LIGHTBLUE	= $7C
   233 = 0004			FMOPENREAD	= $04
   234 = 0008			FMOPENWRITE	= $08
   235 = 0009			FMOPENAPPEND	= $09
   236 = 000C			FMOPENREADWRITE	= $0C
   237 = 24E4			SCREENWIDTH	= DATAORIGIN+$0000
   238 = 24E6			SCREENHEIGHT	= DATAORIGIN+$0002
   239 = 24E8			DATESEPARATOR	= DATAORIGIN+$0004
   240 = D20A			RND	= $D20A
   241 = 02C0			adr.PALETTE	= $02C0
   242 2236			.var PALETTE	= adr.PALETTE .word
   243 = D012			adr.HPALETTE	= $D012
   244 2236			.var HPALETTE	= adr.HPALETTE .word
   245 = 24E9			FILEMODE	= DATAORIGIN+$0005
   246 = 24EA			GRAPHMODE	= DATAORIGIN+$0006
   247 = 24EB			IORESULT	= DATAORIGIN+$0007
   248 = 24EC			EOLN	= DATAORIGIN+$0008
   249 = 24ED			RNDSEED	= DATAORIGIN+$0009
   250
   251 = 2236 C0 02		PALETTE
   251 = 2238 12 D0		HPALETTE
   251 				.endl							; UNIT SYSTEM
   252
   253 				; ------------------------------------------------------------
   254
   255 223A			.local	ATARI						; UNIT
   256
   257 				; ------------------------------------------------------------
   258
   259 = 0010			IRQENS	= $10
   260 = 0012			RTCLOK	= $12
   261 = 0012			RTCLOK1	= $12
   262 = 0013			RTCLOK2	= $13
   263 = 0014			RTCLOK3	= $14
   264 = 004D			ATRACT	= $4D
   265 = 0052			LMARGIN	= $52
   266 = 0053			RMARGIN	= $53
   267 = 0054			ROWCRS	= $54
   268 = 0055			COLCRS	= $55
   269 = 0057			DINDEX	= $57
   270 = 0058			SAVMSC	= $58
   271 = 0062			PALNTS	= $62
   272 = 006A			RAMTOP	= $6A
   273 = 0200			VDSLST	= $0200
   274 = 0230			SDLSTL	= $0230
   275 = 0290			TXTROW	= $0290
   276 = 0291			TXTCOL	= $0291
   277 = 0293			TINDEX	= $0293
   278 = 0294			TXTMSC	= $0294
   279 = 022F			SDMCTL	= $022F
   280 = 026F			GPRIOR	= $026F
   281 = 02F0			CRSINH	= $02F0
   282 = 02F3			CHACT	= $02F3
   283 = 02F4			CHBAS	= $02F4
   284 = 02FC			CH	= $02FC
   285 = 02FD			FILDAT	= $02FD
   286 = 02C0			PCOLR0	= $02C0
   287 = 02C1			PCOLR1	= $02C1
   288 = 02C2			PCOLR2	= $02C2
   289 = 02C3			PCOLR3	= $02C3
   290 = 02C4			COLOR0	= $02C4
   291 = 02C5			COLOR1	= $02C5
   292 = 02C6			COLOR2	= $02C6
   293 = 02C7			COLOR3	= $02C7
   294 = 02C8			COLOR4	= $02C8
   295 = 02C8			COLBAKS	= $02C8
   296 = D000			HPOSP0	= $D000
   297 = D001			HPOSP1	= $D001
   298 = D002			HPOSP2	= $D002
   299 = D003			HPOSP3	= $D003
   300 = D004			HPOSM0	= $D004
   301 = D005			HPOSM1	= $D005
   302 = D006			HPOSM2	= $D006
   303 = D007			HPOSM3	= $D007
   304 = D008			SIZEP0	= $D008
   305 = D009			SIZEP1	= $D009
   306 = D00A			SIZEP2	= $D00A
   307 = D00B			SIZEP3	= $D00B
   308 = D00C			SIZEM	= $D00C
   309 = D00D			GRAFP0	= $D00D
   310 = D00E			GRAFP1	= $D00E
   311 = D00F			GRAFP2	= $D00F
   312 = D010			GRAFP3	= $D010
   313 = D011			GRAFM	= $D011
   314 = D004			P0PF	= $D004
   315 = D014			PAL	= $D014
   316 = D013			TRIG3	= $D013
   317 = D012			COLPM0	= $D012
   318 = D013			COLPM1	= $D013
   319 = D014			COLPM2	= $D014
   320 = D015			COLPM3	= $D015
   321 = D016			COLPF0	= $D016
   322 = D017			COLPF1	= $D017
   323 = D018			COLPF2	= $D018
   324 = D019			COLPF3	= $D019
   325 = D01A			COLBK	= $D01A
   326 = D01B			PRIOR	= $D01B
   327 = D01D			GRACTL	= $D01D
   328 = D01E			HITCLR	= $D01E
   329 = D01F			CONSOL	= $D01F
   330 = D200			AUDF1	= $D200
   331 = D201			AUDC1	= $D201
   332 = D202			AUDF2	= $D202
   333 = D203			AUDC2	= $D203
   334 = D204			AUDF3	= $D204
   335 = D205			AUDC3	= $D205
   336 = D206			AUDF4	= $D206
   337 = D207			AUDC4	= $D207
   338 = D208			AUDCTL	= $D208
   339 = D209			KBCODE	= $D209
   340 = D20E			IRQEN	= $D20E
   341 = D20F			SKSTAT	= $D20F
   342 = D300			PORTA	= $D300
   343 = D301			PORTB	= $D301
   344 = D302			PACTL	= $D302
   345 = D400			DMACTL	= $D400
   346 = D401			CHACTL	= $D401
   347 = D402			DLISTL	= $D402
   348 = D404			HSCROL	= $D404
   349 = D405			VSCROL	= $D405
   350 = D407			PMBASE	= $D407
   351 = D409			CHBASE	= $D409
   352 = D40A			WSYNC	= $D40A
   353 = D40B			VCOUNT	= $D40B
   354 = D40C			PENH	= $D40C
   355 = D40D			PENV	= $D40D
   356 = D40E			NMIEN	= $D40E
   357 = FFFA			NMIVEC	= $FFFA
   358 = FFFC			RESETVEC	= $FFFC
   359 = FFFE			IRQVEC	= $FFFE
   360
   361 				.endl							; UNIT ATARI
   362
   363 				; ------------------------------------------------------------
   364
   365 223A			.local	CRT						; UNIT
   366
   367 223A			.local	KEYPRESSED					; FUNCTION | ASSEMBLER
   368
   369 				; -------------------  ASM Block 00000055  -------------------
   370
   371 223A A0 00			ldy #$00	; false
   372 223C AD FC 02			lda kbcodes
   373 223F C9 FF			cmp #$ff
   374 2241 F0 01			seq
   375 2243 C8				iny		; true
   376 2244 8C F0 24			sty Result
   377
   378 2247			@exit
   379
   380 				; ------------------------------------------------------------
   381
   382 = 24F0			RESULT	= DATAORIGIN+$000C
   383 2247 60				rts						; ret
   384 				.endl
   385
   386 				; ------------------------------------------------------------
   387
   388 = 24EF			TEXTATTR	= DATAORIGIN+$000B
   389 = D01F			CONSOL	= $D01F
   390 = 0000			CN_START_SELECT_OPTION	= $00
   391 = 0001			CN_SELECT_OPTION	= $01
   392 = 0002			CN_START_OPTION	= $02
   393 = 0003			CN_OPTION	= $03
   394 = 0004			CN_START_SELECT	= $04
   395 = 0005			CN_SELECT	= $05
   396 = 0006			CN_START	= $06
   397 = 0007			CN_NONE	= $07
   398 = 0000			BW40	= $00
   399 = 0001			CO40	= $01
   400 = 0002			BW80	= $02
   401 = 0003			CO80	= $03
   402 = 0007			MONO	= $07
   403 = 0001			C40	= $01
   404 = 0003			C80	= $03
   405 = 0000			BLACK	= $00
   406 = 000F			WHITE	= $0F
   407 = 0026			RED	= $26
   408 = 00AC			CYAN	= $AC
   409 = 0048			PURPLE	= $48
   410 = 00B6			GREEN	= $B6
   411 = 0086			BLUE	= $86
   412 = 00DC			YELLOW	= $DC
   413 = 0018			ORANGE	= $18
   414 = 00F4			BROWN	= $F4
   415 = 002A			LIGHT_RED	= $2A
   416 = 0004			DARK_GREY	= $04
   417 = 0008			GREY	= $08
   418 = 00BC			LIGHT_GREEN	= $BC
   419 = 009A			LIGHT_BLUE	= $9A
   420 = 000C			LIGHT_GREY	= $0C
   421 = 0080			BLINK	= $80
   422
   423 				.endl							; UNIT CRT
   424
   425 				; ------------------------------------------------------------
   426
   427 2248			.local	PM_DETECT					; UNIT
   428
   429 2248			.local	PMAX_DETECT					; FUNCTION
   430
   431 				; optimize OK (PM_DETECT), line = 122
   432
   433 2248 AC C7 23 84 82 AC + 	mwy POKEY :bp2
   434 2252 A0 0C			ldy #$0C
   435 2254 B1 82			lda (:bp2),y
   436 2256 C9 01			cmp #$01
   437 2258 F0 08			jeq l_00F5
   438
   439 				; optimize OK (PM_DETECT), line = 124
   440
   441 225A A9 00			lda #$00
   442 225C 8D F1 24			sta RESULT
   443 225F 4C 67 22			jmp l_0103
   444 2262			l_00F5
   445
   446 				; optimize OK (PM_DETECT), line = 125
   447
   448 2262 A9 01			lda #$01
   449 2264 8D F1 24			sta RESULT
   450 2267			l_0103
   451 2267			@exit
   452
   453 				; ------------------------------------------------------------
   454
   455 = 24F1			RESULT	= DATAORIGIN+$000D
   456 2267 60				rts						; ret
   457 				.endl
   458
   459 2268			.local	PMAX_ISFLASHPRESENT				; FUNCTION
   460
   461 				; optimize OK (PM_DETECT), line = 130
   462
   463 2268 AC C9 23 84 82 AC + 	mwy CONFIG :bp2
   464 2272 A0 01			ldy #$01
   465 2274 B1 82			lda (:bp2),y
   466 2276 29 40			and #$40
   467 2278 C9 40			cmp #$40
   468 227A D0 08			jne l_0122
   469
   470 				; optimize OK (PM_DETECT), line = 132
   471
   472 227C A9 01			lda #$01
   473 227E 8D F2 24			sta RESULT
   474 2281 4C 89 22			jmp l_0130
   475 2284			l_0122
   476
   477 				; optimize OK (PM_DETECT), line = 133
   478
   479 2284 A9 00			lda #$00
   480 2286 8D F2 24			sta RESULT
   481 2289			l_0130
   482 2289			@exit
   483
   484 				; ------------------------------------------------------------
   485
   486 = 24F2			RESULT	= DATAORIGIN+$000E
   487 2289 60				rts						; ret
   488 				.endl
   489
   490 228A			.local	PMAX_ISSIDPRESENT				; FUNCTION
   491
   492 				; optimize OK (PM_DETECT), line = 139
   493
   494 228A AC C9 23 84 82 AC + 	mwy CONFIG :bp2
   495 2294 A0 01			ldy #$01
   496 2296 B1 82			lda (:bp2),y
   497 2298 29 04			and #$04
   498 229A C9 04			cmp #$04
   499 229C D0 08			jne l_014F
   500
   501 				; optimize OK (PM_DETECT), line = 141
   502
   503 229E A9 01			lda #$01
   504 22A0 8D F3 24			sta RESULT
   505 22A3 4C AB 22			jmp l_015D
   506 22A6			l_014F
   507
   508 				; optimize OK (PM_DETECT), line = 142
   509
   510 22A6 A9 00			lda #$00
   511 22A8 8D F3 24			sta RESULT
   512 22AB			l_015D
   513 22AB			@exit
   514
   515 				; ------------------------------------------------------------
   516
   517 = 24F3			RESULT	= DATAORIGIN+$000F
   518 22AB 60				rts						; ret
   519 				.endl
   520
   521 22AC			.local	PMAX_ISPSGPRESENT				; FUNCTION
   522
   523 				; optimize OK (PM_DETECT), line = 148
   524
   525 22AC AC C9 23 84 82 AC + 	mwy CONFIG :bp2
   526 22B6 A0 01			ldy #$01
   527 22B8 B1 82			lda (:bp2),y
   528 22BA 29 08			and #$08
   529 22BC C9 08			cmp #$08
   530 22BE D0 08			jne l_017C
   531
   532 				; optimize OK (PM_DETECT), line = 150
   533
   534 22C0 A9 01			lda #$01
   535 22C2 8D F4 24			sta RESULT
   536 22C5 4C CD 22			jmp l_018A
   537 22C8			l_017C
   538
   539 				; optimize OK (PM_DETECT), line = 151
   540
   541 22C8 A9 00			lda #$00
   542 22CA 8D F4 24			sta RESULT
   543 22CD			l_018A
   544 22CD			@exit
   545
   546 				; ------------------------------------------------------------
   547
   548 = 24F4			RESULT	= DATAORIGIN+$0010
   549 22CD 60				rts						; ret
   550 				.endl
   551
   552 22CE			.local	PMAX_ISCOVOXPRESENT				; FUNCTION
   553
   554 				; optimize OK (PM_DETECT), line = 157
   555
   556 22CE AC C9 23 84 82 AC + 	mwy CONFIG :bp2
   557 22D8 A0 01			ldy #$01
   558 22DA B1 82			lda (:bp2),y
   559 22DC 29 10			and #$10
   560 22DE C9 10			cmp #$10
   561 22E0 D0 08			jne l_01A9
   562
   563 				; optimize OK (PM_DETECT), line = 159
   564
   565 22E2 A9 01			lda #$01
   566 22E4 8D F5 24			sta RESULT
   567 22E7 4C EF 22			jmp l_01B7
   568 22EA			l_01A9
   569
   570 				; optimize OK (PM_DETECT), line = 160
   571
   572 22EA A9 00			lda #$00
   573 22EC 8D F5 24			sta RESULT
   574 22EF			l_01B7
   575 22EF			@exit
   576
   577 				; ------------------------------------------------------------
   578
   579 = 24F5			RESULT	= DATAORIGIN+$0011
   580 22EF 60				rts						; ret
   581 				.endl
   582
   583 22F0			.local	PMAX_ISSAMPLEPRESENT				; FUNCTION
   584
   585 				; optimize OK (PM_DETECT), line = 166
   586
   587 22F0 AC C9 23 84 82 AC + 	mwy CONFIG :bp2
   588 22FA A0 01			ldy #$01
   589 22FC B1 82			lda (:bp2),y
   590 22FE 29 20			and #$20
   591 2300 C9 20			cmp #$20
   592 2302 D0 08			jne l_01D6
   593
   594 				; optimize OK (PM_DETECT), line = 168
   595
   596 2304 A9 01			lda #$01
   597 2306 8D F6 24			sta RESULT
   598 2309 4C 11 23			jmp l_01E4
   599 230C			l_01D6
   600
   601 				; optimize OK (PM_DETECT), line = 169
   602
   603 230C A9 00			lda #$00
   604 230E 8D F6 24			sta RESULT
   605 2311			l_01E4
   606 2311			@exit
   607
   608 				; ------------------------------------------------------------
   609
   610 = 24F6			RESULT	= DATAORIGIN+$0012
   611 2311 60				rts						; ret
   612 				.endl
   613
   614 2312			.local	PMAX_GETPOKEY					; FUNCTION
   615
   616 				; optimize OK (PM_DETECT), line = 174
   617
   618 2312 AC C9 23 84 82 AC + 	mwy CONFIG :bp2
   619 231C A0 01			ldy #$01
   620 231E B1 82			lda (:bp2),y
   621 2320 29 03			and #$03
   622 2322 8D F8 24			sta @CASETMP_0003
   623 2325 C9 00			cmp #$00
   624 2327 D0 08			jne l_01FC
   625 				@
   626
   627 				; optimize OK (PM_DETECT), line = 175
   628
   629 2329 A9 01			lda #$01
   630 232B 8D F7 24			sta RESULT
   631
   632 232E 4C 52 23			jmp a_0003
   633 2331			l_01FC
   634 2331 C9 01			cmp #$01
   635 2333 D0 08			jne l_0209
   636 				@
   637
   638 				; optimize OK (PM_DETECT), line = 176
   639
   640 2335 A9 02			lda #$02
   641 2337 8D F7 24			sta RESULT
   642
   643 233A 4C 52 23			jmp a_0003
   644 233D			l_0209
   645 233D C9 02			cmp #$02
   646 233F D0 08			jne l_0216
   647 				@
   648
   649 				; optimize OK (PM_DETECT), line = 177
   650
   651 2341 A9 04			lda #$04
   652 2343 8D F7 24			sta RESULT
   653
   654 2346 4C 52 23			jmp a_0003
   655 2349			l_0216
   656 2349 C9 03			cmp #$03
   657 234B D0 05			jne l_0223
   658 				@
   659
   660 				; optimize OK (PM_DETECT), line = 178
   661
   662 234D A9 04			lda #$04
   663 234F 8D F7 24			sta RESULT
   664
   665 2352			l_0223
   666 2352			a_0003
   667 2352			@exit
   668
   669 				; ------------------------------------------------------------
   670
   671 = 24F7			RESULT	= DATAORIGIN+$0013
   672 = 24F8			@CASETMP_0003	= DATAORIGIN+$0014
   673
   674 = 24F8			@VarData	= @CASETMP_0003
   675 = 0001			@VarDataSize	= 1
   676
   677 2352 60				rts						; ret
   678 				.endl
   679
   680 2353			.local	PMAX_GETCOREVERSION				; FUNCTION
   681
   682 				; optimize OK (PM_DETECT), line = 196
   683
   684 2353 A9 08			lda #$08
   685 2355 8D FA 25			sta adr.S+$00
   686
   687 				; optimize OK (PM_DETECT), line = 197
   688
   689 2358 A9 00			lda #$00
   690 235A 8D F9 25			sta I
   691
   692 235D			l_0241
   693 				; --- ForToDoCondition
   694 235D AD F9 25			lda I
   695 2360 C9 08			cmp #$08
   696 2362 B0 18			jcs l_024F
   697
   698 				; optimize OK (PM_DETECT), line = 199
   699
   700 2364 8D 14 D2			sta CORE
   701
   702 				; optimize OK (PM_DETECT), line = 200
   703
   704 2367 A9 01			lda #$01
   705 2369 18 6D F9 25			add I
   706 236D 85 9D			sta :STACKORIGIN+9
   707 236F A4 9D			ldy +:STACKORIGIN+9
   708 2371 AD 14 D2			lda CORE
   709 2374 99 FA 25			sta adr.S,y
   710
   711 				; --- ForToDoEpilog
   712 2377 EE F9 25			inc I
   713 237A D0 E1			jne l_0241
   714 237C			l_024F
   715
   716 				; optimize OK (PM_DETECT), line = 202
   717
   718 237C AD 9C 23			lda S
   719 237F 85 88			sta @move.src
   720 2381 AD 9D 23			lda S+1
   721 2384 85 89			sta @move.src+1
   722 2386 AC 9A 23 84 82 AC + 	mwy RESULT :bp2
   723 2390 A0 00			ldy #$00
   724 2392 B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
   725 2399			@exit
   726
   727 				; ------------------------------------------------------------
   728
   729 = 24F9			adr.RESULT	= [DATAORIGIN+$0015] .array [256]
   730 2399			.var RESULT	= adr.RESULT .word
   731 = 25F9			I	= DATAORIGIN+$0115
   732 = 25FA			adr.S	= [DATAORIGIN+$0116] .array [256]
   733 2399			.var S	= adr.S .word
   734
   735 = 239A			@VarData	= RESULT
   736 = 0201			@VarDataSize	= 513
   737
   738 2399 60				rts						; ret
   739 = 239A F9 24		RESULT
   739 = 239C FA 25		S
   739 				.endl
   740
   741 239E			.local	PMAX_ENABLECONFIG				; PROCEDURE
   742 239E 8D FA 26			sta ENABLED
   743
   744 				; optimize OK (PM_DETECT), line = 207
   745
   746 23A1 F0 13			jeq l_0279
   747 23A3 AC C7 23 84 82 AC + 	mwy POKEY :bp2
   748 23AD A0 0C			ldy #$0C
   749 23AF A9 3F			lda #$3F
   750 23B1 91 82			sta (:bp2),y
   751 23B3 4C C6 23			jmp l_0288
   752 23B6			l_0279
   753
   754 				; optimize OK (PM_DETECT), line = 208
   755
   756 23B6 AC C7 23 84 82 AC + 	mwy POKEY :bp2
   757 23C0 A0 0C			ldy #$0C
   758 23C2 A9 00			lda #$00
   759 23C4 91 82			sta (:bp2),y
   760 23C6			l_0288
   761
   762 				; ------------------------------------------------------------
   763
   764 = 26FA			ENABLED	= DATAORIGIN+$0216
   765
   766 = 26FA			@VarData	= ENABLED
   767 = 0001			@VarDataSize	= 1
   768
   769 23C6			@exit
   770 					.ifdef @new
   771 					lda <@VarData
   772 					sta :ztmp
   773 					lda >@VarData
   774 					ldy #@VarDataSize-1
   775 					jmp @FreeMem
   776 					els
   777 23C6 60				rts						; ret
   778 					eif
   779 				.endl
   780
   781 				; ------------------------------------------------------------
   782
   783 = D200			adr.POKEY	= $D200
   784 23C7			.var POKEY	= adr.POKEY .word
   785 = D210			adr.CONFIG	= $D210
   786 23C7			.var CONFIG	= adr.CONFIG .word
   787 = D214			CORE	= $D214
   788 = 0001			CORE_MONO	= $01
   789 = 0002			CORE_DIVIDE	= $02
   790 = 0003			CORE_GTIA	= $03
   791 = 0004			CORE_RESTRICT	= $04
   792 = 0005			CORE_OUTPUT	= $05
   793 = 0006			CORE_PHI	= $06
   794 = 0006			CORE_MAX	= $06
   795 = 0001			POKEY_LINEAR	= $01
   796 = 0002			POKEY_CHANNEL_MODE	= $02
   797 = 0003			POKEY_IRQ	= $03
   798 = 0003			POKEY_MAX	= $03
   799 = 0001			PSG_FREQUENCY	= $01
   800 = 0002			PSG_STEREO	= $02
   801 = 0003			PSG_ENVELOPE	= $03
   802 = 0004			PSG_VOLUME	= $04
   803 = 0004			PSG_MAX	= $04
   804 = 0001			SID_TYPE	= $01
   805 = 0001			SID_MAX	= $01
   806 = 000C			POKEY_DETECT	= $0C
   807 = 0001			CONFIG_TYPE	= $01
   808 = 0004			CONFIG_VERSION	= $04
   809
   810 = 23C7 00 D2		POKEY
   810 = 23C9 10 D2		CONFIG
   810 				.endl							; UNIT PM_DETECT
   811
   812 23CB			.local	CONVERT_BOOL					; FUNCTION
   813 23CB 8D FC 26			sta VALUE
   814
   815 				; optimize OK (pmax_test.pas), line = 11
   816
   817 23CE F0 0E			jeq l_029D
   818 23D0 A0 FC			ldy #256-4
   819 23D2 B9 04 1F 99 01 26 + 	mva:rne CODEORIGIN+$0000+4-256,y adr.RESULT+4-256,y+
   820 23DB 4C E9 23			jmp l_02A7
   821 23DE			l_029D
   822 23DE A0 FD			ldy #256-3
   823 23E0 B9 08 1F 99 00 26 + 	mva:rne CODEORIGIN+$0005+3-256,y adr.RESULT+3-256,y+
   824 23E9			l_02A7
   825 23E9			@exit
   826
   827 				; ------------------------------------------------------------
   828
   829 = 26FC			VALUE	= DATAORIGIN+$0218
   830 = 26FD			adr.RESULT	= [DATAORIGIN+$0219] .array [256]
   831 23E9			.var RESULT	= adr.RESULT .word
   832
   833 = 26FC			@VarData	= VALUE
   834 = 0101			@VarDataSize	= 257
   835
   836 23E9 60				rts						; ret
   837 = 23EA FD 26		RESULT
   837 				.endl
   838 23EC			l_0063
   839
   840 				; optimize FAIL ('PM_DETECT.PMAX_DETECT', pmax_test.pas), line = 16
   841
   842 23EC 20 48 22			jsr PM_DETECT.PMAX_DETECT
   843 23EF AD F1 24			lda PM_DETECT.PMAX_DETECT.RESULT
   844 23F2 8D FB 26			sta PRESENT
   845
   846 				; optimize OK (pmax_test.pas), line = 17
   847
   848 23F5 D0 03 4C BC 24		jeq l_02B8
   849
   850 				; optimize OK (pmax_test.pas), line = 19
   851
   852 23FA A9 01			lda #$01
   853 23FC 20 9E 23			jsr PM_DETECT.PMAX_ENABLECONFIG
   854
   855 				; optimize FAIL ('@print', pmax_test.pas), line = 26
   856
   857 					@printSTRING #CODEORIGIN+$0009
   857 				 LDY> CODEORIGIN+$0009\ LDA< CODEORIGIN+$0009\ JSR @PRINTSTRING
   857 23FF A0 20		 LDY> CODEORIGIN+$0009
   857 2401 A9 09		 LDA< CODEORIGIN+$0009
   857 2403 20 32 21		 JSR @PRINTSTRING
   858 2406 20 53 23			jsr PM_DETECT.PMAX_GETCOREVERSION
   859 					@printSTRING PM_DETECT.PMAX_GETCOREVERSION.RESULT
   859 				 LDY PM_DETECT.PMAX_GETCOREVERSION.RESULT+1\ LDA PM_DETECT.PMAX_GETCOREVERSION.RESULT\ JSR @PRINTSTRING
   859 2409 AC 9B 23		 LDY PM_DETECT.PMAX_GETCOREVERSION.RESULT+1
   859 240C AD 9A 23		 LDA PM_DETECT.PMAX_GETCOREVERSION.RESULT
   859 240F 20 32 21		 JSR @PRINTSTRING
   860 2412 20 24 21			@printEOL
   861
   862 				; optimize FAIL ('@print', pmax_test.pas), line = 27
   863
   864 					@printSTRING #CODEORIGIN+$0011
   864 				 LDY> CODEORIGIN+$0011\ LDA< CODEORIGIN+$0011\ JSR @PRINTSTRING
   864 2415 A0 20		 LDY> CODEORIGIN+$0011
   864 2417 A9 11		 LDA< CODEORIGIN+$0011
   864 2419 20 32 21		 JSR @PRINTSTRING
   865 241C 20 12 23			jsr PM_DETECT.PMAX_GETPOKEY
   866 241F AD F7 24			lda PM_DETECT.PMAX_GETPOKEY.RESULT
   867 2422 20 63 21			jsr @printBYTE._a
   868 2425 20 24 21			@printEOL
   869
   870 				; optimize FAIL ('@print', pmax_test.pas), line = 29
   871
   872 					@printSTRING #CODEORIGIN+$001B
   872 				 LDY> CODEORIGIN+$001B\ LDA< CODEORIGIN+$001B\ JSR @PRINTSTRING
   872 2428 A0 20		 LDY> CODEORIGIN+$001B
   872 242A A9 1B		 LDA< CODEORIGIN+$001B
   872 242C 20 32 21		 JSR @PRINTSTRING
   873 242F 20 8A 22			jsr PM_DETECT.PMAX_ISSIDPRESENT
   874 2432 AD F3 24			lda PM_DETECT.PMAX_ISSIDPRESENT.RESULT
   875 2435 20 CB 23			jsr CONVERT_BOOL
   876 					@printSTRING CONVERT_BOOL.RESULT
   876 				 LDY CONVERT_BOOL.RESULT+1\ LDA CONVERT_BOOL.RESULT\ JSR @PRINTSTRING
   876 2438 AC EB 23		 LDY CONVERT_BOOL.RESULT+1
   876 243B AD EA 23		 LDA CONVERT_BOOL.RESULT
   876 243E 20 32 21		 JSR @PRINTSTRING
   877 2441 20 24 21			@printEOL
   878
   879 				; optimize FAIL ('@print', pmax_test.pas), line = 30
   880
   881 					@printSTRING #CODEORIGIN+$0022
   881 				 LDY> CODEORIGIN+$0022\ LDA< CODEORIGIN+$0022\ JSR @PRINTSTRING
   881 2444 A0 20		 LDY> CODEORIGIN+$0022
   881 2446 A9 22		 LDA< CODEORIGIN+$0022
   881 2448 20 32 21		 JSR @PRINTSTRING
   882 244B 20 AC 22			jsr PM_DETECT.PMAX_ISPSGPRESENT
   883 244E AD F4 24			lda PM_DETECT.PMAX_ISPSGPRESENT.RESULT
   884 2451 20 CB 23			jsr CONVERT_BOOL
   885 					@printSTRING CONVERT_BOOL.RESULT
   885 				 LDY CONVERT_BOOL.RESULT+1\ LDA CONVERT_BOOL.RESULT\ JSR @PRINTSTRING
   885 2454 AC EB 23		 LDY CONVERT_BOOL.RESULT+1
   885 2457 AD EA 23		 LDA CONVERT_BOOL.RESULT
   885 245A 20 32 21		 JSR @PRINTSTRING
   886 245D 20 24 21			@printEOL
   887
   888 				; optimize FAIL ('@print', pmax_test.pas), line = 31
   889
   890 					@printSTRING #CODEORIGIN+$0029
   890 				 LDY> CODEORIGIN+$0029\ LDA< CODEORIGIN+$0029\ JSR @PRINTSTRING
   890 2460 A0 20		 LDY> CODEORIGIN+$0029
   890 2462 A9 29		 LDA< CODEORIGIN+$0029
   890 2464 20 32 21		 JSR @PRINTSTRING
   891 2467 20 CE 22			jsr PM_DETECT.PMAX_ISCOVOXPRESENT
   892 246A AD F5 24			lda PM_DETECT.PMAX_ISCOVOXPRESENT.RESULT
   893 246D 20 CB 23			jsr CONVERT_BOOL
   894 					@printSTRING CONVERT_BOOL.RESULT
   894 				 LDY CONVERT_BOOL.RESULT+1\ LDA CONVERT_BOOL.RESULT\ JSR @PRINTSTRING
   894 2470 AC EB 23		 LDY CONVERT_BOOL.RESULT+1
   894 2473 AD EA 23		 LDA CONVERT_BOOL.RESULT
   894 2476 20 32 21		 JSR @PRINTSTRING
   895 2479 20 24 21			@printEOL
   896
   897 				; optimize FAIL ('@print', pmax_test.pas), line = 32
   898
   899 					@printSTRING #CODEORIGIN+$0032
   899 				 LDY> CODEORIGIN+$0032\ LDA< CODEORIGIN+$0032\ JSR @PRINTSTRING
   899 247C A0 20		 LDY> CODEORIGIN+$0032
   899 247E A9 32		 LDA< CODEORIGIN+$0032
   899 2480 20 32 21		 JSR @PRINTSTRING
   900 2483 20 F0 22			jsr PM_DETECT.PMAX_ISSAMPLEPRESENT
   901 2486 AD F6 24			lda PM_DETECT.PMAX_ISSAMPLEPRESENT.RESULT
   902 2489 20 CB 23			jsr CONVERT_BOOL
   903 					@printSTRING CONVERT_BOOL.RESULT
   903 				 LDY CONVERT_BOOL.RESULT+1\ LDA CONVERT_BOOL.RESULT\ JSR @PRINTSTRING
   903 248C AC EB 23		 LDY CONVERT_BOOL.RESULT+1
   903 248F AD EA 23		 LDA CONVERT_BOOL.RESULT
   903 2492 20 32 21		 JSR @PRINTSTRING
   904 2495 20 24 21			@printEOL
   905
   906 				; optimize FAIL ('@print', pmax_test.pas), line = 33
   907
   908 					@printSTRING #CODEORIGIN+$003C
   908 				 LDY> CODEORIGIN+$003C\ LDA< CODEORIGIN+$003C\ JSR @PRINTSTRING
   908 2498 A0 20		 LDY> CODEORIGIN+$003C
   908 249A A9 3C		 LDA< CODEORIGIN+$003C
   908 249C 20 32 21		 JSR @PRINTSTRING
   909 249F 20 68 22			jsr PM_DETECT.PMAX_ISFLASHPRESENT
   910 24A2 AD F2 24			lda PM_DETECT.PMAX_ISFLASHPRESENT.RESULT
   911 24A5 20 CB 23			jsr CONVERT_BOOL
   912 					@printSTRING CONVERT_BOOL.RESULT
   912 				 LDY CONVERT_BOOL.RESULT+1\ LDA CONVERT_BOOL.RESULT\ JSR @PRINTSTRING
   912 24A8 AC EB 23		 LDY CONVERT_BOOL.RESULT+1
   912 24AB AD EA 23		 LDA CONVERT_BOOL.RESULT
   912 24AE 20 32 21		 JSR @PRINTSTRING
   913 24B1 20 24 21			@printEOL
   914
   915 				; optimize OK (pmax_test.pas), line = 34
   916
   917 24B4 A9 00			lda #$00
   918 24B6 20 9E 23			jsr PM_DETECT.PMAX_ENABLECONFIG
   919 24B9 4C C6 24			jmp l_0304
   920 24BC			l_02B8
   921
   922 				; optimize FAIL ('@print', pmax_test.pas), line = 37
   923
   924 					@printSTRING #CODEORIGIN+$0045
   924 				 LDY> CODEORIGIN+$0045\ LDA< CODEORIGIN+$0045\ JSR @PRINTSTRING
   924 24BC A0 20		 LDY> CODEORIGIN+$0045
   924 24BE A9 45		 LDA< CODEORIGIN+$0045
   924 24C0 20 32 21		 JSR @PRINTSTRING
   925 24C3 20 24 21			@printEOL
   926 24C6			l_0304
   927
   928 				; --- RepeatUntilProlog
   929 24C6			l_0308
   930
   931 				; optimize FAIL ('CRT.KEYPRESSED', pmax_test.pas), line = 39
   932
   933 24C6 20 3A 22			jsr CRT.KEYPRESSED
   934 24C9 AD F0 24			lda CRT.KEYPRESSED.RESULT
   935 24CC F0 F8			jeq l_0308
   936
   937 				; ------------------------------------------------------------
   938
   939 = 26FB			PRESENT	= DATAORIGIN+$0217
   940 24CE			@exit
   941
   942 24CE A2 00		@halt	ldx #$00
   943 24D0 9A				txs
   944 					.ifdef MAIN.@DEFINES.ROMOFF
   945 					inc portb
   946 					.fi
   947
   948 24D1 A0 01			ldy #$01
   949
   950 24D3 60				rts
   951
   952 				; ------------------------------------------------------------
   953
   954 24D4 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   955
   956 				; ------------------------------------------------------------
   957
   958 24E4			.local	@DEFINES
   959 24E4			ATARI
   960 				.endl
   961
   962 24E4			.local	@RESOURCE
   963 				.endl
   964
   965 				.endl							; MAIN
   966
   967 				; ------------------------------------------------------------
   968 				; ------------------------------------------------------------
   969
   970 				.macro	UNITINITIALIZATION
   971 				
   972 					.ifdef MAIN.SYSTEM.@UnitInit
   973 					jsr MAIN.SYSTEM.@UnitInit
   974 					.fi
   975 				
   976 					.ifdef MAIN.ATARI.@UnitInit
   977 					jsr MAIN.ATARI.@UnitInit
   978 					.fi
   979 				
   980 					.ifdef MAIN.CRT.@UnitInit
   981 					jsr MAIN.CRT.@UnitInit
   982 					.fi
   983 				
   984 					.ifdef MAIN.PM_DETECT.@UnitInit
   985 					jsr MAIN.PM_DETECT.@UnitInit
   986 					.fi
   987 				.endm
   988
   989 				; ------------------------------------------------------------
   990
   991 					ift .SIZEOF(MAIN.SYSTEM) > 0
   992 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   992 				SYSTEM: $2236..$2239
   993 					eif
   994
   995 					ift .SIZEOF(MAIN.ATARI) > 0
   996 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   997 					eif
   998
   999 					ift .SIZEOF(MAIN.CRT) > 0
  1000 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
  1000 				CRT: $223A..$2247
  1001 					eif
  1002
  1003 					ift .SIZEOF(MAIN.PM_DETECT) > 0
  1004 					.print 'PM_DETECT: ',MAIN.PM_DETECT,'..',MAIN.PM_DETECT+.SIZEOF(MAIN.PM_DETECT)-1
  1004 				PM_DETECT: $2248..$23CA
  1005 					eif
  1006
  1007 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  1007 				CODE: $2000..$24E3
  1008
  1009 				; ------------------------------------------------------------
  1010
  1011 24E4				.align $0004
  1012
  1013 24E4			DATAORIGIN
  1014 24E4 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  1015
  1016 = 0006			VARINITSIZE	= *-DATAORIGIN
  1017 = 0319			VARDATASIZE	= 793
  1018
  1019 = 27FD			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  1020
  1021 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  1021 				DATA: $24E4..$27FD
  1022
  1023 02E0-02E1> 01 22			run START
  1024
  1025 				; ------------------------------------------------------------
  1026
  1027 				.macro	STATICDATA
  1028 				.by  $03 $59 $65 $73 $00 $02 $4E $6F  $00 $06 $43 $6F $72 $65 $3A $20  $00 $08 $50 $6F $6B $65 $79 $73
  1029 				.by  $3A $20 $00 $05 $53 $49 $44 $3A  $20 $00 $05 $50 $53 $47 $3A $20  $00 $07 $43 $6F $76 $6F $78 $3A
  1030 				.by  $20 $00 $08 $53 $61 $6D $70 $6C  $65 $3A $20 $00 $07 $46 $6C $61  $73 $68 $3A $20 $00 $15 $20 $50
  1031 				.by  $6F $6B $65 $79 $4D $41 $58 $20  $6E $6F $74 $20 $66 $6F $75 $6E  $64 $2E $20 $00
  1032 				.endm
  1033
  1034 					end
